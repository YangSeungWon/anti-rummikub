version: "3.8"

services:
  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: anti-rummikub-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=antirummikub
    restart: always
    networks:
      - app-network

  # PostgreSQL
  postgres:
    image: postgres:latest
    container_name: anti-rummikub-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: antirummikub
    restart: always
    networks:
      - app-network

  # Redis
  redis:
    image: redis:latest
    container_name: anti-rummikub-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - app-network

  # Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: anti-rummikub-backend
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=antirummikub
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - MONGODB_URI=mongodb://mongodb:27017/antirummikub
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=anti_rummikub_secret_key
      - JWT_EXPIRES_IN=24h
      - CORS_ORIGIN=http://localhost:3000
    restart: always
    networks:
      - app-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: anti-rummikub-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:3001/api
      - VITE_SOCKET_URL=http://localhost:3001
    restart: always
    networks:
      - app-network

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  mongodb_data:
  postgres_data:
  redis_data:
